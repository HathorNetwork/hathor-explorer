name: deploy

on:
  push:
    branches: [master]
    tags: ['v*']
  pull_request:
    branches:
    - dev
    - master

jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: /home/runner/work/hathor-explorer/hathor-explorer/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: |
          npm install
          tar -cvf node_modules.tar ./node_modules
      - name: Upload node modules
        uses: actions/upload-artifact@v2
        with:
          name: node_modules
          path: node_modules.tar
          if-no-files-found: error
          retention-days: 1
  build:
    needs: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download node modules
        uses: actions/download-artifact@v2
        with:
          name: node_modules
      - name: Build
        run: |
          tar -xf node_modules.tar
          make testnet_build
  deploy-testnet-explorer:
    if: github.ref == 'refs/heads/master'
    needs: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download node modules
        uses: actions/download-artifact@v2
        with:
          name: node_modules
      - name: Build
        run: |
          tar -xf node_modules.tar
          make testnet_build
      - name: Deploy Testnet Explorer
        run: |
          make testnet_deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
          CLOUDFRONT_ID: E2TGO5SVP34CC3
  deploy-mainnet-explorer:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download node modules
        uses: actions/download-artifact@v2
        with:
          name: node_modules
      - name: Build
        run: |
          tar -xf node_modules.tar
          make mainnet_build
      - name: Deploy Mainnet Explorer
        run: |
          make mainnet_deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
          CLOUDFRONT_ID: ETOC9JKCK86OG
